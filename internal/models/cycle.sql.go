// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: cycle.sql

package models

import (
	"context"
)

const getCycle = `-- name: GetCycle :one
select id, is_elimination, day
from game_cycle
limit 1
`

func (q *Queries) GetCycle(ctx context.Context) (GameCycle, error) {
	row := q.db.QueryRow(ctx, getCycle)
	var i GameCycle
	err := row.Scan(&i.ID, &i.IsElimination, &i.Day)
	return i, err
}

const updateCycle = `-- name: UpdateCycle :one
update game_cycle
set is_elimination = $1,
day = $2
WHERE id = $3
returning id, is_elimination, day
`

type UpdateCycleParams struct {
	IsElimination bool  `json:"is_elimination"`
	Day           int32 `json:"day"`
	ID            int32 `json:"id"`
}

func (q *Queries) UpdateCycle(ctx context.Context, arg UpdateCycleParams) (GameCycle, error) {
	row := q.db.QueryRow(ctx, updateCycle, arg.IsElimination, arg.Day, arg.ID)
	var i GameCycle
	err := row.Scan(&i.ID, &i.IsElimination, &i.Day)
	return i, err
}
